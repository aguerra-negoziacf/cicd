# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

.docker: &docker
  image: "registry.gitlab.com/negozia/cicd-runners:docker-buildx"
  variables:
    DOCKER_VERSION: "20.10"
    DOCKER_FILE_PATH: "Dockerfile"
    # Disable TLS since we're running inside local network.
    DOCKER_TLS_CERTDIR: "" # No TLS
    # Use the overlayfs driver for improved performance.
    DOCKER_DRIVER: overlay2
  services:
    - "docker:${DOCKER_VERSION}-dind"

.build: &build
  <<: *docker
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_JOB_TOKEN" "$CI_REGISTRY"

.docker_build: &docker_build
  extends: .build
  stage: build
  variables:
    REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE"
    REGISTRY_IMAGE_LATEST: "$REGISTRY_IMAGE:latest"
  script:
    - |
      git checkout-index --all --prefix umask-fix-checkout/
      cd umask-fix-checkout
    # Tag image
    - |
      if [[ -z "$CI_COMMIT_TAG" ]]; then
        export APPLICATION_TAG=${APPLICATION_TAG:-$CI_COMMIT_SHORT_SHA}
      else
        export APPLICATION_TAG=${APPLICATION_TAG:-$CI_COMMIT_TAG}
      fi
    # Build Image
    - docker image pull --quiet "$REGISTRY_IMAGE_LATEST" || echo "No previously cached image found. The docker build will proceed without using a cached image"
    - |
      docker buildx build \
        --cache-from "$REGISTRY_IMAGE_LATEST" \
        --tag "$REGISTRY_IMAGE:$APPLICATION_TAG" \
        -f "$DOCKER_FILE_PATH" \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        --build-arg ENV=$ENV \
        --progress=plain \
        --push \
        . 2>&1
    - |
      if ! [[ -z "$CI_COMMIT_TAG" ]]; then
        docker tag "$REGISTRY_IMAGE:$APPLICATION_TAG" "$REGISTRY_IMAGE_LATEST"
        docker push "$REGISTRY_IMAGE_LATEST"
      fi

docker_build:
  <<: *docker_build
  rules:
    - if: '$BUILD_DISABLED'
      when: never
    - if: '$CI_COMMIT_REF_PROTECTED'
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH'