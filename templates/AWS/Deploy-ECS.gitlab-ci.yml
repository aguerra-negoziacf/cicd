variables:
  CICD_RUNNERS_IMAGE_VERSION: 'latest'

.deploy_base: &deploy_base
  variables:
    CLUSTER_NAME: "$ORGANIZATION-$ENV-$CLUSTER_NAME_PARTIAL"
    SERVICE_NAME: "$ENV-$CI_PROJECT_NAME-svc"
    TASK_DEFINITION_NAME: "$ENV-$CI_PROJECT_NAME-td"
    REGISTRY_IMAGE: "$CI_REGISTRY/$CI_PROJECT_NAME"
  image: "registry.gitlab.com/negozia/cicd-runners:${CICD_RUNNERS_IMAGE_VERSION}"
  stage: deploy
  script:
    # Tag image
    - |
      if [[ -z "$CI_COMMIT_TAG" ]]; then
        export APPLICATION_TAG=${APPLICATION_TAG:-$CI_COMMIT_SHORT_SHA}
      else
        export APPLICATION_TAG=${APPLICATION_TAG:-$CI_COMMIT_TAG}
      fi
      export NEW_ECR_IMAGE=${NEW_ECR_IMAGE:-"$REGISTRY_IMAGE:$APPLICATION_TAG"}
    # Deploy Image
    - >
      python3 /ecs_update_service.py
  rules:
    - if: '$DEPLOY_DISABLED'
      when: never

deploy_qa:
  extends: .deploy_base
  variables:
    ENV: qa
    ROLE_ARN: "${ROLE_ARN_QA}"
  # environment:
  #   name: qa
  #   url: https://$ENV.creditointeligente.co
  rules:
    - if: '$CI_COMMIT_TAG'
      when: never
    - if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'

deploy_prod:
  extends: .deploy_base
  when: manual
  variables:
    ENV: prod
    ROLE_ARN: "${ROLE_ARN_PROD}"
  # environment:
  #   name: prod
  #   url: https://creditointeligente.co
  rules:
    - if: '$DEPLOY_DISABLED'
      when: never
    - if: '$CI_COMMIT_TAG'

deploy_prod_failover:
  extends: .deploy_base
  when: manual
  variables:
    ENV: prod
    ROLE_ARN: "${ROLE_ARN_PROD}"
    AWS_DEFAULT_REGION: "us-west-2"
  # environment:
  #   name: prod
  #   url: https://creditointeligente.co
  rules:
    - if: '$DEPLOY_DISABLED || $DEPLOY_FAILOVER_DISABLED'
      when: never
    - if: '$CI_COMMIT_TAG'